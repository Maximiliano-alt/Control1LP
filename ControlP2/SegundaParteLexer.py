# Generated from SegundaParte.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,10,77,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,3,7,59,8,7,1,7,
        4,7,62,8,7,11,7,12,7,63,1,8,3,8,67,8,8,1,8,1,8,1,9,4,9,72,8,9,11,
        9,12,9,73,1,9,1,9,0,0,10,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,1,0,2,1,0,48,57,2,0,9,9,32,32,80,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,1,21,1,0,0,0,3,23,1,0,0,0,5,25,
        1,0,0,0,7,27,1,0,0,0,9,37,1,0,0,0,11,45,1,0,0,0,13,51,1,0,0,0,15,
        58,1,0,0,0,17,66,1,0,0,0,19,71,1,0,0,0,21,22,5,40,0,0,22,2,1,0,0,
        0,23,24,5,44,0,0,24,4,1,0,0,0,25,26,5,41,0,0,26,6,1,0,0,0,27,28,
        5,101,0,0,28,29,5,110,0,0,29,30,5,99,0,0,30,31,5,101,0,0,31,32,5,
        110,0,0,32,33,5,100,0,0,33,34,5,105,0,0,34,35,5,100,0,0,35,36,5,
        111,0,0,36,8,1,0,0,0,37,38,5,97,0,0,38,39,5,112,0,0,39,40,5,97,0,
        0,40,41,5,103,0,0,41,42,5,97,0,0,42,43,5,100,0,0,43,44,5,111,0,0,
        44,10,1,0,0,0,45,46,5,109,0,0,46,47,5,111,0,0,47,48,5,118,0,0,48,
        49,5,101,0,0,49,50,5,114,0,0,50,12,1,0,0,0,51,52,5,114,0,0,52,53,
        5,111,0,0,53,54,5,116,0,0,54,55,5,97,0,0,55,56,5,114,0,0,56,14,1,
        0,0,0,57,59,5,45,0,0,58,57,1,0,0,0,58,59,1,0,0,0,59,61,1,0,0,0,60,
        62,7,0,0,0,61,60,1,0,0,0,62,63,1,0,0,0,63,61,1,0,0,0,63,64,1,0,0,
        0,64,16,1,0,0,0,65,67,5,13,0,0,66,65,1,0,0,0,66,67,1,0,0,0,67,68,
        1,0,0,0,68,69,5,10,0,0,69,18,1,0,0,0,70,72,7,1,0,0,71,70,1,0,0,0,
        72,73,1,0,0,0,73,71,1,0,0,0,73,74,1,0,0,0,74,75,1,0,0,0,75,76,6,
        9,0,0,76,20,1,0,0,0,5,0,58,63,66,73,1,6,0,0
    ]

class SegundaParteLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    ENC = 4
    APAG = 5
    MOV = 6
    ROT = 7
    INT = 8
    NEWLINE = 9
    WS = 10

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "'encendido'", "'apagado'", "'mover'", 
            "'rotar'" ]

    symbolicNames = [ "<INVALID>",
            "ENC", "APAG", "MOV", "ROT", "INT", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "ENC", "APAG", "MOV", "ROT", "INT", 
                  "NEWLINE", "WS" ]

    grammarFileName = "SegundaParte.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


